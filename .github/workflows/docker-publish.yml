name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        env:
          BUILD_DATE: ${{ github.event.head_commit.timestamp }}
          VCS_REF: ${{ github.sha }}
        run: |
          # Prepare build.sh arguments from metadata
          BUILD_ARGS=()

          # Add tags
          while IFS= read -r tag; do
            [ -n "$tag" ] && BUILD_ARGS+=(--tag "$tag")
          done <<< "${{ steps.meta.outputs.tags }}"

          # Add labels
          while IFS= read -r label; do
            [ -n "$label" ] && BUILD_ARGS+=(--label "$label")
          done <<< "${{ steps.meta.outputs.labels }}"

          # Add cache settings
          BUILD_ARGS+=(--cache-from "type=gha")
          BUILD_ARGS+=(--cache-to "type=gha,mode=max")

          # Add push flag for non-PR builds
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            BUILD_ARGS+=(--push)
          fi

          # Run build script
          chmod +x build.sh
          ./build.sh "${BUILD_ARGS[@]}"
